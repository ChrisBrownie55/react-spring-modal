{"version":3,"file":"index.m.js","sources":["../ModalPortal.tsx","../ModalBackdrop/index.tsx","../BaseModal.tsx","../CenterModal/index.tsx","../BottomModal/index.tsx"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface IProps {\n  children?: JSX.Element | JSX.Element[] | Array<JSX.Element | null>;\n}\n\nconst modalRoot = globalThis.document\n  ? document.querySelector('#modal-root')\n  : null;\n\nfunction ModalPortal({ children }: IProps) {\n  const node = useMemo(\n    () => (globalThis.document ? document.createElement('div') : null),\n    []\n  );\n\n  useEffect(() => {\n    if (modalRoot && node) {\n      modalRoot.appendChild(node);\n    }\n    return () => {\n      if (modalRoot && node) {\n        modalRoot.removeChild(node);\n      }\n    };\n  }, [node]);\n\n  return node ? createPortal(children, node) : null;\n}\n\nexport default ModalPortal;\n","import classNames from '@chbphone55/classnames';\nimport React, { forwardRef, useCallback } from 'react';\nimport { animated } from 'react-spring';\nimport './style.css';\n\nfunction ModalBackdrop({ className, onClick, ...props }: any, ref: any) {\n  const handleClick = useCallback(\n    event => {\n      if (ref.current === event.target) {\n        onClick(event);\n      }\n    },\n    [onClick, ref]\n  );\n\n  return (\n    <animated.div\n      ref={ref}\n      onClick={handleClick}\n      className={classNames('ModalBackdrop', className)}\n      {...props}\n    />\n  );\n}\n\nexport default forwardRef(ModalBackdrop);\n","import React, { ReactNode, useEffect, useRef } from 'react';\nimport { useTransition } from 'react-spring';\nimport ModalBackdrop from './ModalBackdrop';\nimport ModalPortal from './ModalPortal';\n\nimport useLockBodyScroll from 'react-use/lib/useLockBodyScroll';\n\nimport 'wicg-inert';\n\nconst root = globalThis.document ? document.getElementById('root') : null;\n\nfunction getFocusable(element: HTMLElement): NodeListOf<HTMLElement> {\n  return element.querySelectorAll(\n    'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  );\n}\n\nexport interface IBaseModalProps {\n  children: ReactNode;\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nfunction BaseModal({ isOpen, onRequestClose, children }: IBaseModalProps) {\n  useLockBodyScroll(isOpen);\n\n  const lastActiveElement = useRef<HTMLElement | null>(null);\n  const modalRef = useRef<HTMLElement>(null);\n\n  const backdropTransition = useTransition(isOpen, null, {\n    '--opacity': 0,\n    from: { '--opacity': 0 },\n    enter: { '--opacity': 0.5 },\n    leave: { '--opacity': 0 },\n    onRest() {\n      if (modalRef.current && isOpen) {\n        const focusableElements = getFocusable(modalRef.current);\n        if (focusableElements.length) {\n          focusableElements[0].focus();\n        }\n      }\n    }\n  });\n\n  // Close on Escape\n  useEffect(() => {\n    function listener(event: KeyboardEvent) {\n      if (event.key === 'Escape') {\n        onRequestClose();\n      }\n    }\n    window.addEventListener('keyup', listener);\n\n    return () => {\n      window.removeEventListener('keyup', listener);\n    };\n  }, [onRequestClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      if (globalThis.document) {\n        lastActiveElement.current = document.activeElement as HTMLElement;\n      }\n\n      if (root) {\n        root.setAttribute('inert', '');\n      }\n    } else {\n      if (root) {\n        root.removeAttribute('inert');\n      }\n\n      // wait for inert to wear off then focus\n      setTimeout(() => {\n        if (lastActiveElement.current) {\n          lastActiveElement.current.focus();\n        }\n      }, 0);\n    }\n  }, [isOpen]);\n\n  return (\n    <ModalPortal>\n      {backdropTransition.map(backdrop =>\n        backdrop.item ? (\n          <ModalBackdrop\n            key={backdrop.key}\n            className=\"BottomModal__backdrop\"\n            style={backdrop.props}\n            onClick={onRequestClose}\n            aria-modal=\"true\"\n            role=\"dialog\"\n            ref={modalRef}\n          >\n            {children}\n          </ModalBackdrop>\n        ) : null\n      )}\n    </ModalPortal>\n  );\n}\n\nexport default BaseModal;\n","import React from 'react';\nimport { useTransition, animated, ItemTransition } from 'react-spring';\nimport { ObjectOf } from '../generic-types';\nimport BaseModal, { IBaseModalProps } from '../BaseModal';\n\nimport classNames from '@chbphone55/classnames';\nimport './style.css';\n\ninterface IProps extends IBaseModalProps, ObjectOf<any> {\n  modalTransition?: Array<ItemTransition<any, any>>;\n}\n\nexport function useCenterModalTransition(\n  isOpen: boolean,\n  props: ObjectOf<any> = {}\n) {\n  return useTransition(isOpen, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    ...props\n  });\n}\n\nfunction CenterModal({\n  isOpen,\n  onRequestClose,\n  className,\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  modalTransition = useCenterModalTransition(isOpen),\n  ...props\n}: IProps) {\n  return (\n    <BaseModal isOpen={isOpen} onRequestClose={onRequestClose}>\n      {modalTransition.map(({ item, key, props: style }) =>\n        item ? (\n          <animated.div\n            key={key}\n            style={style}\n            className={classNames('CenterModal shadow-lg', className)}\n            {...props}\n          />\n        ) : null\n      )}\n    </BaseModal>\n  );\n}\n\nexport default CenterModal;\n","import React from 'react';\nimport { animated, ItemTransition, useTransition } from 'react-spring';\nimport BaseModal, { IBaseModalProps } from '../BaseModal';\n\nimport classNames from '@chbphone55/classnames';\nimport { ObjectOf } from '../generic-types';\nimport './style.css';\n\ninterface IProps extends IBaseModalProps, ObjectOf<any> {\n  modalTransition?: Array<ItemTransition<any, any>>;\n}\n\nfunction BottomModal({\n  children,\n  isOpen,\n  onRequestClose,\n  className,\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  modalTransition = useTransition(isOpen, null, {\n    from: { transform: 'translateY(100%) translateX(-50%)' },\n    enter: { transform: 'translateY(0%) translateX(-50%)' },\n    leave: { transform: 'translateY(100%) translateX(-50%)' }\n  }),\n  ...props\n}: IProps) {\n  return (\n    <BaseModal isOpen={isOpen} onRequestClose={onRequestClose}>\n      {modalTransition.map(modal =>\n        modal.item ? (\n          <animated.div\n            className={classNames('BottomModal shadow-lg', className)}\n            key={modal.key}\n            style={modal.props}\n            {...props}\n          >\n            {children}\n          </animated.div>\n        ) : null\n      )}\n    </BaseModal>\n  );\n}\n\nexport default BottomModal;\n"],"names":["const","modalRoot","globalThis","document","querySelector","ModalPortal","ref","node","useMemo","createElement","useEffect","appendChild","removeChild","createPortal","children","forwardRef","ref$1","handleClick","useCallback","event","current","target","onClick","h","animated","div","className","classNames","props","root","getElementById","BaseModal","useLockBodyScroll","isOpen","lastActiveElement","useRef","modalRef","backdropTransition","useTransition","from","enter","leave","onRest","focusableElements","querySelectorAll","length","focus","listener","key","onRequestClose","window","addEventListener","removeEventListener","activeElement","setAttribute","removeAttribute","setTimeout","map","backdrop","item","ModalBackdrop","style","aria-modal","role","CenterModal","Object","opacity","useCenterModalTransition","modalTransition","BottomModal","transform","modal"],"mappings":"wSAOAA,IAAMC,EAAYC,WAAWC,SACzBA,SAASC,cAAc,eACvB,KAEJ,SAASC,EAAYC,oBACbC,EAAOC,oBACJN,WAAWC,SAAWA,SAASM,cAAc,OAAS,MAC7D,WAGFC,oBACMT,GAAaM,GACfN,EAAUU,YAAYJ,cAGlBN,GAAaM,GACfN,EAAUW,YAAYL,KAGzB,CAACA,IAEGA,EAAOM,EAAaC,EAAUP,GAAQ,KCH/C,MAAeQ,EApBf,SAAuBC,EAAuCV,wLACtDW,EAAcC,WAClBC,GACMb,EAAIc,UAAYD,EAAME,QACxBC,EAAQH,IAGZ,CAACG,EAAShB,WAIViB,EAACC,EAASC,sBACRnB,IAAKA,EACLgB,QAASL,EACTS,UAAWC,EAAW,gBAAiBD,IACnCE,MCXJC,EAAO3B,WAAWC,SAAWA,SAAS2B,eAAe,QAAU,KAcrE,SAASC,EAAUzB,kDACjB0B,EAAkBC,OAEZC,EAAoBC,EAA2B,MAC/CC,EAAWD,EAAoB,MAE/BE,EAAqBC,EAAcL,EAAQ,KAAM,aACxC,EACbM,KAAM,aAAe,GACrBC,MAAO,aAAe,IACtBC,MAAO,aAAe,GACtBC,qBACMN,EAAShB,SAAWa,EAAQ,KACxBU,EAAiCP,EAAShB,QAxBvCwB,iBACb,4EAwBQD,EAAkBE,QACpBF,EAAkB,GAAGG,mBAO7BpC,sBACWqC,EAAS5B,GACE,WAAdA,EAAM6B,KACRC,WAGJC,OAAOC,iBAAiB,QAASJ,cAG/BG,OAAOE,oBAAoB,QAASL,KAErC,CAACE,IAEJvC,aACMuB,GACE/B,WAAWC,WACb+B,EAAkBd,QAAUjB,SAASkD,eAGnCxB,GACFA,EAAKyB,aAAa,QAAS,MAGzBzB,GACFA,EAAK0B,gBAAgB,SAIvBC,sBACMtB,EAAkBd,SACpBc,EAAkBd,QAAQ0B,SAE3B,KAEJ,CAACb,IAGFV,EAAClB,OACEgC,EAAmBoB,aAAIC,UACtBA,EAASC,KACPpC,EAACqC,GACCZ,IAAKU,EAASV,IACdtB,UAAU,wBACVmC,MAAOH,EAAS9B,MAChBN,QAAS2B,EACTa,aAAW,OACXC,KAAK,SACLzD,IAAK8B,GAEJtB,GAED,QCxEZ,SAASkD,EAAY1D,+FAXnB2B,EACAL,yBAAuB,IAEhBU,EAAcL,EAAQ,KAAMgC,kBACjC1B,KAAM,CAAE2B,QAAS,GACjB1B,MAAO,CAAE0B,QAAS,GAClBzB,MAAO,CAAEyB,QAAS,QAUFC,CAAyBlC,wMAIzCV,EAACQ,GAAUE,OAAQA,EAAQgB,eAAgBA,GACxCmB,EAAgBX,aAAKnD,iBAElBiB,EAACC,EAASC,sBACRuB,UACAa,cACAnC,UAAWC,EAAW,wBAAyBD,IAC3CE,IAEJ,QC9BZ,SAASyC,EAAY/D,mGAMDgC,EAAcL,EAAQ,KAAM,CAC5CM,KAAM,CAAE+B,UAAW,qCACnB9B,MAAO,CAAE8B,UAAW,mCACpB7B,MAAO,CAAE6B,UAAW,uPAKpB/C,EAACQ,GAAUE,OAAQA,EAAQgB,eAAgBA,GACxCmB,EAAgBX,aAAIc,UACnBA,EAAMZ,KACJpC,EAACC,EAASC,sBACRC,UAAWC,EAAW,wBAAyBD,GAC/CsB,IAAKuB,EAAMvB,IACXa,MAAOU,EAAM3C,OACTA,GAEHd,GAED"}