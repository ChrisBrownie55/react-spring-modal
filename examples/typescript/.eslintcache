[{"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index.tsx":"1","/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/serviceWorker.ts":"2","/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App.tsx":"3","/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/Settings.tsx":"4","/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/SignUp.tsx":"5","/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/Menu.tsx":"6"},{"size":532,"mtime":1610300910293,"results":"7","hashOfConfig":"8"},{"size":5295,"mtime":1610300910300,"results":"9","hashOfConfig":"8"},{"size":1223,"mtime":1611463827139,"results":"10","hashOfConfig":"8"},{"size":2807,"mtime":1611513999523,"results":"11","hashOfConfig":"8"},{"size":2444,"mtime":1611514220750,"results":"12","hashOfConfig":"8"},{"size":2110,"mtime":1611465429453,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"v63h8w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index.tsx",[],["29","30"],"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/serviceWorker.ts",[],"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App.tsx",[],"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/Settings.tsx",[],"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/SignUp.tsx",[],["31","32"],"/home/chris/Workspace/react-spring-modal/examples/typescript/src/index/App/Menu.tsx",["33","34","35","36","37"],"import * as React from 'react';\nimport { StateProps } from '../shared/types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons/faBars';\nimport { animated, useTransition } from 'react-spring';\nimport { BaseModal } from 'react-spring-modal/dist/commonjs/index';\nimport './Menu/Menu.css';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes';\n\nexport function Menu({ state, setState }: StateProps) {\n  const isOpen = state.type === 'menu';\n  const transition = useTransition(isOpen, null, {\n    from: { transform: 'translateX(-100%)' },\n    enter: { transform: 'translateX(0)' },\n    leave: { transform: 'translateX(-100%)' }\n  });\n\n  function close() {\n    setState({ type: 'idle' });\n  }\n\n  return (\n    <>\n      <button\n        className=\"Menu__button--circle Menu__button--open\"\n        onClick={() => setState({ type: 'menu' })}\n        title=\"Open navigation menu\"\n        aria-label=\"Open navigation menu\"\n      >\n        <FontAwesomeIcon icon={faBars} />\n      </button>\n\n      {/* <BaseModal isOpen={isOpen} onDismiss={close}>\n        {transition.map(\n          ({ item, key, props }) =>\n            item && (\n              <animated.div key={key} style={props} className=\"Menu\">\n                <button onClick={close} className=\"Menu__button--circle Menu__button--close\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n                <a className=\"Menu__link\" href=\"#\" onClick={close}>\n                  Home\n                </a>\n                <a className=\"Menu__link\" href=\"#\" onClick={close}>\n                  About\n                </a>\n                <a className=\"Menu__link\" href=\"#\" onClick={close}>\n                  Products\n                </a>\n                <a className=\"Menu__link\" href=\"#\" onClick={close}>\n                  Contact\n                </a>\n                <a className=\"Menu__link\" href=\"#\" onClick={close}>\n                  Jobs\n                </a>\n              </animated.div>\n            )\n        )}\n      </BaseModal> */}\n    </>\n  );\n}\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":18},{"ruleId":"44","severity":1,"message":"48","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":19},{"ruleId":"44","severity":1,"message":"49","line":8,"column":10,"nodeType":"46","messageId":"47","endLine":8,"endColumn":17},{"ruleId":"44","severity":1,"message":"50","line":12,"column":9,"nodeType":"46","messageId":"47","endLine":12,"endColumn":19},{"ruleId":"44","severity":1,"message":"51","line":18,"column":12,"nodeType":"46","messageId":"47","endLine":18,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"@typescript-eslint/no-unused-vars","'animated' is defined but never used.","Identifier","unusedVar","'BaseModal' is defined but never used.","'faTimes' is defined but never used.","'transition' is assigned a value but never used.","'close' is defined but never used.","no-global-assign","no-unsafe-negation"]